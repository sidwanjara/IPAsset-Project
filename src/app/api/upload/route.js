import {NextResponse} from 'next/server';
const fs = require('fs');
const path = require('path');
require('dotenv').config();
const pinataSDK = require('@pinata/sdk');

 
export async function POST(req) {
    if (req.method !== "POST") {
        return NextResponse.json({error: "Method Not Allowed"}, {status:405});
    }
    try {
        //connect to Pinata
        const pinata = new pinataSDK({pinataApiKey: process.env.PINATA_KEY, pinataSecretApiKey: process.env.PINATA_SECRET});
        const res = await pinata.testAuthentication();


        //file path for image generated by OpenAI
        const filePath = path.join(process.cwd(), 'image_nft.png');
        //IPFS upload options
        const options = {
            pinataMetadata: {
                name: "NFTIMAGE",
                keyvalues: {
                    customKey: 'TOSHI',
                    customKey2: 'MOCHI'
                }
            },
            pinataOptions: {
                cidVersion: 0
            }
        };

        //creating stream for Pinata to read from and uploading image
        const fileStream = fs.createReadStream(filePath);
        const respo = await pinata.pinFileToIPFS(fileStream, options);

        //response contains IPFS Hash
        console.log(res);
        console.log(JSON.stringify(respo.data));
        
        return NextResponse.json({data: respo}, {status:200});
    } catch (e) {
        console.log(e);
        return NextResponse.json({data:"Error uploading to IPFS"}, {status:500});
    }
    
} 








 